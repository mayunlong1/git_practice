import pytestimport yamlfrom 测开班_12期.pytest_work.calc import Calc@pytest.fixture()def method_calc():    return Calcclass TestCalc:    @pytest.mark.parametrize('a, b ,expected', yaml.safe_load(open('data.yml', 'r'))['add'])    def calc_add(self, method_calc, a, b, expected):        try:            calc_add = method_calc()            assert calc_add.add(a, b) == expected        except TypeError:            pytest.raises(TypeError)    @pytest.mark.parametrize('a, b ,expected', yaml.safe_load(open('data.yml', 'r'))['sub'])    def calc_sub(self, method_calc, a, b, expected):        try:            calc_sub = method_calc()            assert calc_sub.sub(a, b) == expected        except TypeError:            pytest.raises(TypeError)    @pytest.mark.parametrize('a, b ,expected', yaml.safe_load(open('data.yml', 'r'))['mul'])    def calc_mul(self, method_calc, a, b, expected):        try:            calc_mul = method_calc()            assert calc_mul.mul(a, b) == expected        except TypeError:            pytest.raises(TypeError)    @pytest.mark.parametrize('a, b ,expected', yaml.safe_load(open('data.yml', 'r'))['div'])    def calc_div(self, method_calc, a, b, expected):        try:            calc_div = method_calc()            assert calc_div.div(a, b) == expected        except TypeError:            pytest.raises(TypeError)if __name__ == '__main__':    pytest.main(['-m', 'add or div', 'test_calc.py'])